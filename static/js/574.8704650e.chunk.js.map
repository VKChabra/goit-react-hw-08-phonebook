{"version":3,"file":"static/js/574.8704650e.chunk.js","mappings":"wNACA,EAA8B,iCAA9B,EAA2E,+B,SC4D3E,EAzDoB,WAClB,OAAoCA,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UACfC,EAAW,GA0BjB,OACE,kBAAMC,UAAWC,EAAoBC,SAzBd,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASE,MAAMD,MAClCJ,EAAKM,QAEL,IAAMC,EAAiBL,EAAKM,cACtBC,EAAef,EAASgB,MAC5B,SAAAC,GAAO,OAAIA,EAAQT,KAAKM,gBAAkBD,CAAnC,IAGT,GAAIE,EACF,OAAOG,MAAM,GAAD,OAAIV,EAAJ,mCAQdV,EALgB,CACdU,KAAAA,EACAG,MAAAA,GAIH,EAGC,WACE,mBAAOV,UAAWC,EAAlB,kBAEE,kBACEiB,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOrB,UAAWC,EAAlB,oBAEE,kBACEiB,KAAK,MACLX,KAAK,QACLY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAASI,SAAUxB,EAAhC,SACGA,GAAYyB,EAAAA,EAAAA,GAAU,aAAe,kBAI7C,E,iBC3DYC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,WAAjB,ECC9B,EAA8B,4BCmB9B,EAfe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACXF,GAAcG,EAAAA,EAAAA,IAAYC,GAKhC,OACE,mBAAO/B,UAAWC,EAAlB,mCAEE,kBAAOiB,KAAK,OAAOT,MAAOkB,EAAaK,SAPpB,SAAA7B,GACrByB,GAASK,EAAAA,EAAAA,IAAU9B,EAAEG,OAAOG,OAC7B,MAQF,ECjBD,EAAmC,uCC2BnC,EAvBqB,SAAC,GAA0B,IAAxByB,EAAuB,EAAvBA,GAAI3B,EAAmB,EAAnBA,KAAM4B,EAAa,EAAbA,OAChC,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBvC,EAAxB,KAAwBA,UACxB,OACE,gBAAIE,UAAWC,EAAf,UACGM,EADH,KACW4B,GACT,mBACEjB,KAAK,SACLI,SAAUxB,EACVwC,QAAS,WACPD,EAAcH,EACf,EALH,SAOGpC,GAAYyB,EAAAA,EAAAA,GAAU,YAAc,aAI5C,ECpBD,EAA+B,+BC6B/B,EAvBiB,WACf,OAAwDgB,EAAAA,EAAAA,MAA1CxC,EAAd,EAAQyC,KAAgBC,EAAxB,EAAwBA,UAAW3C,EAAnC,EAAmCA,UAAW4C,EAA9C,EAA8CA,MACxCf,GAAcG,EAAAA,EAAAA,IAAYN,GAShC,OACE,iBAAKxB,UAAWC,EAAhB,UACGyC,IAAS,uBAAIA,EAAMF,OACnB1C,IAAa,SAAC6C,EAAA,EAAD,IACbF,GAXoB,WACvB,IAAMG,EAAmBjB,EAAYkB,OAAOhC,cAC5C,OAAOd,EAAS2B,QAAO,SAAAV,GAAO,OAC5BA,EAAQT,KAAKM,cAAciC,SAASF,EADR,GAG/B,CAOKG,GAAmBC,KAAI,gBAAGd,EAAH,EAAGA,GAAI3B,EAAP,EAAOA,KAAMG,EAAb,EAAaA,MAAb,OACrB,SAAC,EAAD,CAAuBwB,GAAIA,EAAI3B,KAAMA,EAAM4B,OAAQzB,GAAhCwB,EADE,MAK9B,ECZD,EAZkB,WAChB,OACE,iCACE,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/index.jsx","redux/filter/filterSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/index.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactsItem/contactsItem.module.css?e54d","components/Contacts/ContactsItem/index.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/contacts.module.css?1e09","components/Contacts/index.jsx","components/Phonebook/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactForm_contactForm__f4X+T\",\"formLabel\":\"contactForm_formLabel__PNGQI\"};","import { useAddContactMutation } from 'redux/contactsApi.js';\nimport { BtnLoader } from 'components/Loader';\nimport styles from './contactForm.module.css';\n\nconst ContactForm = () => {\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const contacts = [];\n\n  const submitAddContact = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.phone.value;\n    form.reset();\n\n    const normalizedName = name.toLowerCase();\n    const existingName = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (existingName) {\n      return alert(`${name} is already in contacts, sorry`);\n    }\n\n    const contact = {\n      name,\n      phone,\n    };\n\n    addContact(contact);\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={submitAddContact}>\n      <label className={styles.formLabel}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles.formLabel}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? BtnLoader('Adding...') : 'Add contact'}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter.filterValue;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__jh4CL\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice.js';\nimport { filterSelectors } from 'redux/filter';\nimport styles from './filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(filterSelectors.getFilter);\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={styles.filterLabel}>\n      Find contacts by name\n      <input type=\"text\" value={filterValue} onChange={onChangeFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsListItem\":\"contactsItem_contactsListItem__h-NOJ\"};","import { useDeleteContactMutation } from 'redux/contactsApi.js';\nimport { BtnLoader } from 'components/Loader';\nimport styles from './contactsItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  return (\n    <li className={styles.contactsListItem}>\n      {name}: {number}\n      <button\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        {isLoading ? BtnLoader('Deleting') : 'Delete'}\n      </button>\n    </li>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contacts_contactsList__TzXx2\"};","import { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contactsApi.js';\nimport { getFilter } from 'redux/filter/filterSelectors.js';\nimport ContactsItem from 'components/Contacts/ContactsItem';\nimport { Loader } from 'components/Loader';\nimport styles from './contacts.module.css';\n\nconst Contacts = () => {\n  const { data: contacts, isSuccess, isLoading, error } = useGetContactsQuery();\n  const filterValue = useSelector(getFilter);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filterValue.trim().toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className={styles.contactsList}>\n      {error && <p>{error.data}</p>}\n      {isLoading && <Loader />}\n      {isSuccess &&\n        filteredContacts().map(({ id, name, phone }) => (\n          <ContactsItem key={id} id={id} name={name} number={phone} />\n        ))}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nconst Phonebook = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </>\n  );\n};\n\nexport default Phonebook;\n"],"names":["useAddContactMutation","addContact","isLoading","contacts","className","styles","onSubmit","e","preventDefault","form","target","name","elements","value","phone","reset","normalizedName","toLowerCase","existingName","find","contact","alert","type","pattern","title","required","disabled","BtnLoader","getFilter","state","filter","filterValue","dispatch","useDispatch","useSelector","filterSelectors","onChange","setFilter","id","number","useDeleteContactMutation","deleteContact","onClick","useGetContactsQuery","data","isSuccess","error","Loader","normalizedFilter","trim","includes","filteredContacts","map"],"sourceRoot":""}